# Welcome to Serverless!
#
# Author Nikita Kozlov, 2022

vars:
  ddbTableName: ImageDescription-dev

service: image-storage-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  # you can overwrite defaults here
  stage: dev
  region: us-east-2
  profile: dev-sls-admin-us-east-2

# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource: !Join
            - '/'
            - - "arn:aws:dynamodb:${self:provider.region}:*:table"
              - !ImportValue ImageDescriptionTable

# you can add packaging information here
package:
  patterns:
    - '!.idea/**'
    - '!presentation/**'
    - '!_dev/**'
    - '!staging/**'
    - '!infra/**'

functions:
  imageStorageService:
    handler: handler.run
    events:
      - httpApi:
          path: /image
          method: '*'

#    Define function environment variables here
    environment:
      DDB_TABLE: ${self:vars.ddbTableName}

# you can add CloudFormation resource templates here
#resources:
#  extensions:
#    HttpApiStage:
#      Properties:
#        StageName: "stage-http-api-overrides"

plugins:
  - serverless-plugin-typescript
